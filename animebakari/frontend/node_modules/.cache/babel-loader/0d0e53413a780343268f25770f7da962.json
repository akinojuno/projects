{"ast":null,"code":"var _jsxFileName = \"/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport AnimeList from './components/AnimeList';\nimport { Route, Link } from 'react-router-dom';\nimport Description from './components/Description';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [animes, setAnimes] = useState([]);\n  const [prevPage, setPrevPage] = useState('');\n  useEffect(_id => {\n    axios('http://localhost:8000/anime').then(res => {\n      setAnimes(res.data);\n    });\n  }, []); // \ttypeSelection : [\"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \"Fighting\", \"Poison\", \"Ground\", \"Flying\", \"Bug\", \"Rock\", \"Ghost\", \"Dark\", \"Steel\", \"Fairy\"],\n  // \tprevPage: '/',\n  // } \n\n  const changePrevPage = page => {\n    setPrevPage({\n      prevPage: page\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: animes.map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(AnimeList, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"descriptionContainer\",\n        children: this.state.pokemons.map(pokemon => /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\" + pokemon.name,\n          children: /*#__PURE__*/_jsxDEV(Description, {\n            prevPage: this.state.prevPage,\n            pokemon: pokemon,\n            full: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 48\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RHnroLIH+vOojvzgcH1UAhDoFTs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/App.js"],"names":["React","AnimeList","Route","Link","Description","axios","useState","useEffect","App","animes","setAnimes","prevPage","setPrevPage","_id","then","res","data","changePrevPage","page","map","pokemon","name","img","types","id","state","pokemons"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAEM,GAAD,IAAS;AAClBR,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCS,IADD,CACMC,GAAG,IAAI;AACXL,MAAAA,SAAS,CAACK,GAAG,CAACC,IAAL,CAAT;AACD,KAHD;AAIE,GALM,EAKJ,EALI,CAAT,CALiB,CAYlB;AACA;AACA;;AAEA,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAChCN,IAAAA,WAAW,CAAC;AACXD,MAAAA,QAAQ,EAAEO;AADC,KAAD,CAAX;AAGA,GAJD;;AAQI,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BAYA;AAAA;AAAA;AAAA;AAAA,cAZA,eAeA;AAAA,+BACE;AAAA,iCACE,QAAE,KAAF;AAAQ,YAAA,KAAK,MAAb;AAAc,YAAA,IAAI,EAAC,GAAnB;AAAA,sBAEKT,MAAM,CAACU,GAAP,CAAYC,OAAO,IAAI;AACtB,kCAAQ,QAAC,SAAD;AAER,gBAAA,IAAI,EAAEA,OAAO,CAACC,IAFN;AAGR,gBAAA,KAAK,EAAED,OAAO,CAACE,GAHP;AAIR,gBAAA,IAAI,EAAEF,OAAO,CAACG;AAJN,iBACHH,OAAO,CAACI,EADL;AAAA;AAAA;AAAA;AAAA,sBAAR;AAKA,aAND;AAFL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfA,eAkRA;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBAEK,KAAKC,KAAL,CAAWC,QAAX,CAAoBP,GAApB,CAAyBC,OAAO,iBAAI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,MAAIA,OAAO,CAACC,IAAzB;AAAA,iCACnC,QAAC,WAAD;AAAc,YAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWd,QAAnC;AAA6C,YAAA,OAAO,EAAES,OAAtD;AAA+D,YAAA,IAAI,EAAE;AAArE;AAAA;AAAA;AAAA;AAAA;AADmC;AAAA;AAAA;AAAA;AAAA,gBAApC;AAFL;AAAA;AAAA;AAAA;AAAA,cAlRA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAiSD,CAzTH;;GAAMZ,G;;KAAAA,G;AA4TN,eAAeA,GAAf","sourcesContent":["\nimport './App.css';\nimport React from 'react'\nimport AnimeList from './components/AnimeList';\nimport { Route, Link } from 'react-router-dom';\nimport Description from './components/Description';\nimport axios from 'axios';\nimport {useState, useEffect} from 'react';\n\nconst App = () => {\n\n\tconst [animes, setAnimes] = useState([])\n\tconst [prevPage, setPrevPage] = useState('');\n\n\tuseEffect((_id) => {\n\t\taxios('http://localhost:8000/anime')\n\t\t.then(res => {\n\t\t  setAnimes(res.data)\n\t\t})\n\t  }, []);\n\n// \ttypeSelection : [\"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \"Fighting\", \"Poison\", \"Ground\", \"Flying\", \"Bug\", \"Rock\", \"Ghost\", \"Dark\", \"Steel\", \"Fairy\"],\n// \tprevPage: '/',\n// } \n\nconst changePrevPage = (page) => {\n\tsetPrevPage({\n\t\tprevPage: page\n\t});\n}\n\n\n\t\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\t\t\t\t\t\t{/* <nav>\n\t\t\t\t\t\t\t<img className=\"pokeheader\" src={\"https://tcgplayerpro-www.s1.umbraco.io/media/2483/pokemon_play_pokemon_banner-02-2x.jpg\"} />\n\t\t\t\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t\t\t\t\t<span>All</span>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.state.typeSelection.map( type => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Link to={\"/type/\" + type.toLocaleLowerCase()}><span> {type} </span></Link>\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</nav> */}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tanimes.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <AnimeList\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t{/* < Route exact path=\"/type/Normal\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Normal') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fire\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fire') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Water\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Water') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Electric\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Electric') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Grass\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Grass') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ice\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ice') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fighting\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fighting') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Poison\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Poison') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ground\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ground') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Flying\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Flying') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Bug\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Bug') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Rock\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Rock') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ghost\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ghost') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Dark\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Dark') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Steel\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Steel') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fairy\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fairy') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route> */}\n\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<div className=\"descriptionContainer\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.map( pokemon => <Route path={\"/\"+pokemon.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Description  prevPage={this.state.prevPage} pokemon={pokemon} full={true} />\n\t\t\t\t\t\t\t\t\t\t\t</Route>)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n  \t\t</header>\n      \n\n    </div>\n  );\n  }\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}