{"ast":null,"code":"var _jsxFileName = \"/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/components/AddAnimeForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddAnimeForm = ({\n  addAnime\n}) => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('Action');\n  const [rating, setRating] = useState(1);\n  const [image, setImage] = useState('');\n  const [synopsis, setSynopsis] = useState('');\n  const [episodes, setEpisodes] = useState(1);\n  const [status, setStatus] = useState('ongoing');\n\n  const addAnimeBtnClickHandler = () => {\n    axios.post('http://localhost:8000/anime', {\n      title,\n      category,\n      rating,\n      image,\n      synopsis\n    }).then(res => {\n      const newAnime = res.data;\n      console.log(category);\n      addAnime(newAnime);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addAnimeForm\",\n    children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this), \"Rating:     \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: rating,\n      onChange: e => {\n        setRating(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this), \"Category:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Drama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Comedy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this), \"Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: image,\n      onChange: e => {\n        setImage(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this), \"Synopsis:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: synopsis,\n      onChange: e => {\n        setSynopsis(e.target.value);\n      },\n      width: 200,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), \"Number of Episodes:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: episodes,\n      onChange: e => {\n        setEpisodes(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), \"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      value: status,\n      onChange: e => {\n        setStatus(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"On-Going\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addAnimeBtnClickHandler,\n      children: \"Add Anime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddAnimeForm, \"DZRzoOhlT4tXiWjz4yz3ClpTbw4=\");\n\n_c = AddAnimeForm;\nexport default AddAnimeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAnimeForm\");","map":{"version":3,"sources":["/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/components/AddAnimeForm.js"],"names":["useState","axios","AddAnimeForm","addAnime","title","setTitle","category","setCategory","rating","setRating","image","setImage","synopsis","setSynopsis","episodes","setEpisodes","status","setStatus","addAnimeBtnClickHandler","post","then","res","newAnime","data","console","log","e","target","value"],"mappings":"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","sourcesContent":["\nimport { useState } from 'react';\nimport axios from 'axios';\n\n\n\n\nconst AddAnimeForm = ({addAnime}) => {\n\n    const [title, setTitle] = useState('');\n    const [category, setCategory] = useState('Action');\n    const [rating, setRating] = useState(1);\n    const [image, setImage] = useState('')\n    const [synopsis, setSynopsis] = useState('')\n    const [episodes, setEpisodes] = useState(1)\n    const [status, setStatus] = useState('ongoing')\n\n\n    const addAnimeBtnClickHandler = () => {\n        axios.post('http://localhost:8000/anime', {\n            title,\n            category,\n            rating,\n            image,\n            synopsis\n    })\n        .then(res => {\n            \n            const newAnime = res.data;\n            console.log(category)\n            addAnime(newAnime);\n        });\n    }\n\n   \n\n    return(\n\n        <div className=\"addAnimeForm\">\n            Title:\n            <input \n            type='text' \n            value={title}\n            onChange={(e)=> setTitle(e.target.value)}\n            /> <br />\n            Rating:     <input type='number'\n            value={rating}\n            onChange={(e)=>{setRating(e.target.value)}}\n            /> <br />\n            Category:\n            <select\n            value={category}\n            onChange={(e)=> setCategory(e.target.value)}\n            >\n                <option>Action</option>\n                <option>Drama</option>\n                <option>Comedy</option>\n            </select> <br />\n            Image:\n            <input \n            type='text'\n            value={image}\n            onChange={(e) => {setImage(e.target.value)}} \n            /> <br />\n            Synopsis:\n            <input \n            type=\"text\"\n            value={synopsis}\n            onChange={(e) => {setSynopsis(e.target.value)}}\n            width={200}\n            height={200}\n            />\n            <br />\n            Number of Episodes:\n            <input \n            type=\"number\" \n            value={episodes} \n            onChange={(e)=> {setEpisodes(e.target.value)}}\n            />\n            Status:\n            <select \n            value={status}\n            onChange={(e)=>{setStatus(e.target.value)}}\n            >\n                <option>On-Going</option>\n                <option>Completed</option>\n            </select>\n\n            \n                <button onClick={addAnimeBtnClickHandler}>Add Anime</button>\n           \n            \n        </div>\n    );\n}\n\nexport default AddAnimeForm;"]},"metadata":{},"sourceType":"module"}