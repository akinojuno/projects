{"ast":null,"code":"var _jsxFileName = \"/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Pokemon from './components/Pokemon';\nimport { Route, Link } from 'react-router-dom';\nimport Description from './components/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemons: [{\n        name: \"Bulbasaur\",\n        id: \"#001\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/bulbasaur.png\",\n        types: [\"Grass\", \"Poison\"],\n        description: \"There is a plant seed on its back right from the day this Pokémon is born. The seed slowly grows larger.\"\n      }, {\n        name: \"Ivysaur\",\n        id: \"#002\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/ivysaur.png\",\n        types: [\"Grass\", \"Poison\"],\n        description: \"When the bulb on its back grows large, it appears to lose the ability to stand on its hind legs.\"\n      }, {\n        name: \"Venusaur\",\n        id: \"#003\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/venusaur.png\",\n        types: [\"Grass\", \"Poison\"],\n        description: \"Its plant blooms when it is absorbing solar energy. It stays on the move to seek sunlight.\"\n      }, {\n        name: \"Charmander\",\n        id: \"#004\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/charmander.png\",\n        types: [\"Fire\"],\n        description: \"It has a preference for hot things. When it rains, steam is said to spout from the tip of its tail.\"\n      }, {\n        name: \"Charmeleon\",\n        id: \"#005\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/charmeleon.png\",\n        types: [\"Fire\"],\n        description: \"It has a barbaric nature. In battle, it whips its fiery tail around and slashes away with sharp claws.\"\n      }, {\n        name: \"Charizard\",\n        id: \"#006\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/charizard.png\",\n        types: [\"Fire\", \"Flying\"],\n        description: \"It spits fire that is hot enough to melt boulders. It may cause forest fires by blowing flames.\"\n      }, {\n        name: \"Squirtle\",\n        id: \"#007\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/squirtle.png\",\n        types: [\"Water\"],\n        description: \"When it retracts its long neck into its shell, it squirts out water with vigorous force.\"\n      }, {\n        name: \"Caterpie\",\n        id: \"#010\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/caterpie.png\",\n        types: [\"Bug\"],\n        description: \"For protection, it releases a horrible stench from the antenna on its head to drive away enemies.\"\n      }, {\n        name: \"Pidgey\",\n        id: \"#016\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/pidgey.png\",\n        types: [\"Normal\", \"Flying\"],\n        description: \"Very docile. If attacked, it will often kick up sand to protect itself rather than fight back.\"\n      }, {\n        name: \"Rattata\",\n        id: \"#019\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/rattata.png\",\n        types: [\"Normal\"],\n        description: \"Will chew on anything with its fangs. If you see one, you can be certain that 40 more live in the area.\"\n      }, {\n        name: \"Arbok\",\n        id: \"#024\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/arbok.png\",\n        types: [\"Poison\"],\n        description: \"The frightening patterns on its belly have been studied. Six variations have been confirmed.\"\n      }, {\n        name: \"Pikachu\",\n        id: \"#025\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/pikachu-alt2.png\",\n        types: [\"Electric\"],\n        description: \"Pikachu that can generate powerful electricity have cheek sacs that are extra soft and super stretchy.\"\n      }, {\n        name: \"Sandshrew\",\n        id: \"#027\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/sandshrew.png\",\n        types: [\"Ground\"],\n        description: \"It loves to bathe in the grit of dry, sandy areas. By sand bathing, the Pokémon rids itself of dirt and moisture clinging to its body.\"\n      }, {\n        name: \"Jigglypuff\",\n        id: \"#039\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/jigglypuff.png\",\n        types: [\"Fairy\"],\n        description: \"Jigglypuff has top-notch lung capacity, even by comparison to other Pokémon. It won’t stop singing its lullabies until its foes fall asleep.\"\n      }, {\n        name: \"Mankey\",\n        id: \"#056\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/mankey.png\",\n        types: [\"Fighting\"],\n        description: \"An agile Pokémon that lives in trees. It angers easily and will not hesitate to attack anything.\"\n      }, {\n        name: \"Poliwrath\",\n        id: \"#062\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/poliwrath.png\",\n        types: [\"Water\", \"Fighting\"],\n        description: \"Its body is solid muscle. When swimming through cold seas, Poliwrath uses its impressive arms to smash through drift ice and plow forward.\"\n      }, {\n        name: \"Geodude\",\n        id: \"#074\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/geodude.png\",\n        types: [\"Rock\", \"Ground\"],\n        description: \"Commonly found near mountain trails and the like. If you step on one by accident, it gets angry.\"\n      }, {\n        name: \"Magnemite\",\n        id: \"#081\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/magnemite.png\",\n        types: [\"Electric\", \"Steel\"],\n        description: \"At times, Magnemite runs out of electricity and ends up on the ground. If you give batteries to a grounded Magnemite, it’ll start moving again.\"\n      }, {\n        name: \"Cloyster\",\n        id: \"#091\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/cloyster.png\",\n        types: [\"Water\", \"Ice\"],\n        description: \"Its shell is extremely hard. It cannot be shattered, even with a bomb. The shell opens only when it is attacking.\"\n      }, {\n        name: \"Gastly\",\n        id: \"#092\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/gastly.png\",\n        types: [\"Ghost\"],\n        description: \"Born from gases, anyone would faint if engulfed by its gaseous body, which contains poison.\"\n      }, {\n        name: \"Haunter\",\n        id: \"#093\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/haunter.png\",\n        types: [\"Ghost\", \"Poison\"],\n        description: \"Its tongue is made of gas. If licked, its victim starts shaking constantly until death eventually comes.\"\n      }, {\n        name: \"Gengar\",\n        id: \"#094\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/gengar.png\",\n        types: [\"Ghost\", \"Poison\"],\n        description: \"On the night of a full moon, if shadows move on their own and laugh, it must be Gengar’s doing.\"\n      }, {\n        name: \"Scyther\",\n        id: \"#123\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/scyther.png\",\n        types: [\"Bug\", \"Flying\"],\n        description: \"As Scyther fights more and more battles, its scythes become sharper and sharper. With a single slice, Scyther can fell a massive tree.\"\n      }, {\n        name: \"Omanyte\",\n        id: \"#138\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/omanyte.png\",\n        types: [\"Rock\", \"Water\"],\n        description: \"Because some Omanyte manage to escape after being restored or are released into the wild by people, this species is becoming a problem.\"\n      }, {\n        name: \"Aerodactyl\",\n        id: \"#142\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/aerodactyl.png\",\n        types: [\"Flying\"],\n        description: \"This is a ferocious Pokémon from ancient times. Apparently even modern technology is incapable of producing a perfectly restored specimen.\"\n      }, {\n        name: \"Articuno\",\n        id: \"#144\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/articuno.png\",\n        types: [\"Ice\", \"Flying\"],\n        description: \"It’s said that this Pokémon’s beautiful blue wings are made of ice. Articuno flies over snowy mountains, its long tail fluttering along behind it.\"\n      }, {\n        name: \"Azumarill\",\n        id: \"#184\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/azumarill.png\",\n        types: [\"Water\", \"Fairy\"],\n        description: \"It spends most of its time in the water. On sunny days, Azumarill floats on the surface of the water and sunbathes.\"\n      }, {\n        name: \"Umbreon\",\n        id: \"#197\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/umbreon.png\",\n        types: [\"Dark\"],\n        description: \"When this Pokémon becomes angry, its pores secrete a poisonous sweat, which it sprays at its opponent’s eyes.\"\n      }, {\n        name: \"Murkrow\",\n        id: \"#198\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/murkrow.png\",\n        types: [\"Dark\", \"Flying\"],\n        description: \"It has a weakness for shiny things. It’s been known to sneak into the nests of Gabite—noted collectors of jewels—in search of treasure.\"\n      }, {\n        name: \"Forretress\",\n        id: \"#205\",\n        img: \"https://img.pokemondb.net/artwork/vector/large/forretress.png\",\n        types: [\"Bug\", \"Steel\"],\n        description: \"When something approaches it, it fires off fragments of its steel shell in attack. This is not a conscious action but a conditioned reflex.\"\n      }],\n      typeSelection: [\"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \"Fighting\", \"Poison\", \"Ground\", \"Flying\", \"Bug\", \"Rock\", \"Ghost\", \"Dark\", \"Steel\", \"Fairy\"],\n      prevPage: '/'\n    };\n\n    this.changePrevPage = page => {\n      this.setState({\n        prevPage: page\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"pokeheader\",\n            src: \"https://tcgplayerpro-www.s1.umbraco.io/media/2483/pokemon_play_pokemon_banner-02-2x.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 10\n          }, this), this.state.typeSelection.map(type => {\n            return /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/type/\" + type.toLocaleLowerCase(),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", type, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 20\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: this.state.pokemons.map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Normal\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Normal') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Fire\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Fire') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Water\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Water') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Electric\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Electric') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Grass\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Grass') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Ice\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Ice') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Fighting\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Fighting') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Poison\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Poison') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Ground\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Ground') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Flying\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Flying') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Bug\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Bug') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Rock\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Rock') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Ghost\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Ghost') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Dark\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Dark') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Steel\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Steel') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/type/Fairy\",\n              children: this.state.pokemons.filter(pokemon => {\n                return pokemon.types.indexOf('Fairy') !== -1;\n              }).map(pokemon => {\n                return /*#__PURE__*/_jsxDEV(Pokemon, {\n                  name: pokemon.name,\n                  image: pokemon.img,\n                  type: pokemon.types\n                }, pokemon.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"descriptionContainer\",\n          children: this.state.pokemons.map(pokemon => /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\" + pokemon.name,\n            children: /*#__PURE__*/_jsxDEV(Description, {\n              prevPage: this.state.prevPage,\n              pokemon: pokemon,\n              full: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 48\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/App.js"],"names":["React","Pokemon","Route","Link","Description","App","Component","state","pokemons","name","id","img","types","description","typeSelection","prevPage","changePrevPage","page","setState","render","map","type","toLocaleLowerCase","pokemon","filter","indexOf"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React from 'react'\nimport Pokemon from './components/Pokemon';\nimport { Route, Link } from 'react-router-dom';\nimport Description from './components/Description';\n\nclass App extends React.Component {\nstate = {\n  pokemons : [\n\t\t{\n\t\t\tname: \"Bulbasaur\",\n\t\t\tid: \"#001\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/bulbasaur.png\",\n\t\t\ttypes: [\"Grass\",\"Poison\"],\n\t\t\tdescription: \"There is a plant seed on its back right from the day this Pokémon is born. The seed slowly grows larger.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Ivysaur\",\n\t\t\tid: \"#002\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/ivysaur.png\",\n\t\t\ttypes: [\"Grass\",\"Poison\"],\n\t\t\tdescription: \"When the bulb on its back grows large, it appears to lose the ability to stand on its hind legs.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Venusaur\",\n\t\t\tid: \"#003\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/venusaur.png\",\n\t\t\ttypes: [\"Grass\",\"Poison\"],\n\t\t\tdescription: \"Its plant blooms when it is absorbing solar energy. It stays on the move to seek sunlight.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Charmander\",\n\t\t\tid: \"#004\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/charmander.png\",\n\t\t\ttypes: [\"Fire\"],\n\t\t\tdescription: \"It has a preference for hot things. When it rains, steam is said to spout from the tip of its tail.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Charmeleon\",\n\t\t\tid: \"#005\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/charmeleon.png\",\n\t\t\ttypes: [\"Fire\"],\n\t\t\tdescription: \"It has a barbaric nature. In battle, it whips its fiery tail around and slashes away with sharp claws.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Charizard\",\n\t\t\tid: \"#006\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/charizard.png\",\n\t\t\ttypes: [\"Fire\",\"Flying\"],\n\t\t\tdescription: \"It spits fire that is hot enough to melt boulders. It may cause forest fires by blowing flames.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Squirtle\",\n\t\t\tid: \"#007\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/squirtle.png\",\n\t\t\ttypes: [\"Water\"],\n\t\t\tdescription: \"When it retracts its long neck into its shell, it squirts out water with vigorous force.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Caterpie\",\n\t\t\tid:\"#010\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/caterpie.png\",\n\t\t\ttypes: [\"Bug\"],\n\t\t\tdescription: \"For protection, it releases a horrible stench from the antenna on its head to drive away enemies.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Pidgey\",\n\t\t\tid: \"#016\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/pidgey.png\",\n\t\t\ttypes: [\"Normal\", \"Flying\"],\n\t\t\tdescription: \"Very docile. If attacked, it will often kick up sand to protect itself rather than fight back.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Rattata\",\n\t\t\tid: \"#019\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/rattata.png\",\n\t\t\ttypes: [\"Normal\"],\n\t\t\tdescription: \"Will chew on anything with its fangs. If you see one, you can be certain that 40 more live in the area.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Arbok\",\n\t\t\tid: \"#024\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/arbok.png\",\n\t\t\ttypes: [\"Poison\"],\n\t\t\tdescription: \"The frightening patterns on its belly have been studied. Six variations have been confirmed.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Pikachu\",\n\t\t\tid: \"#025\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/pikachu-alt2.png\",\n\t\t\ttypes: [\"Electric\"],\n\t\t\tdescription: \"Pikachu that can generate powerful electricity have cheek sacs that are extra soft and super stretchy.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Sandshrew\",\n\t\t\tid: \"#027\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/sandshrew.png\",\n\t\t\ttypes: [\"Ground\"],\n\t\t\tdescription: \"It loves to bathe in the grit of dry, sandy areas. By sand bathing, the Pokémon rids itself of dirt and moisture clinging to its body.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Jigglypuff\",\n\t\t\tid: \"#039\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/jigglypuff.png\",\n\t\t\ttypes: [\"Fairy\"],\n\t\t\tdescription: \"Jigglypuff has top-notch lung capacity, even by comparison to other Pokémon. It won’t stop singing its lullabies until its foes fall asleep.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Mankey\",\n\t\t\tid: \"#056\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/mankey.png\",\n\t\t\ttypes: [\"Fighting\"],\n\t\t\tdescription: \"An agile Pokémon that lives in trees. It angers easily and will not hesitate to attack anything.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Poliwrath\",\n\t\t\tid: \"#062\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/poliwrath.png\",\n\t\t\ttypes: [\"Water\",\"Fighting\"],\n\t\t\tdescription: \"Its body is solid muscle. When swimming through cold seas, Poliwrath uses its impressive arms to smash through drift ice and plow forward.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Geodude\",\n\t\t\tid: \"#074\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/geodude.png\",\n\t\t\ttypes: [\"Rock\", \"Ground\"],\n\t\t\tdescription: \"Commonly found near mountain trails and the like. If you step on one by accident, it gets angry.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Magnemite\",\n\t\t\tid: \"#081\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/magnemite.png\",\n\t\t\ttypes: [\"Electric\",\"Steel\"],\n\t\t\tdescription: \"At times, Magnemite runs out of electricity and ends up on the ground. If you give batteries to a grounded Magnemite, it’ll start moving again.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Cloyster\",\n      id: \"#091\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/cloyster.png\",\n\t\t\ttypes: [\"Water\",\"Ice\"],\n\t\t\tdescription: \"Its shell is extremely hard. It cannot be shattered, even with a bomb. The shell opens only when it is attacking.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Gastly\",\n\t\t\tid: \"#092\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/gastly.png\",\n\t\t\ttypes: [\"Ghost\"],\n\t\t\tdescription: \"Born from gases, anyone would faint if engulfed by its gaseous body, which contains poison.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Haunter\",\n\t\t\tid: \"#093\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/haunter.png\",\n\t\t\ttypes: [\"Ghost\",\"Poison\"],\n\t\t\tdescription: \"Its tongue is made of gas. If licked, its victim starts shaking constantly until death eventually comes.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Gengar\",\n      id: \"#094\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/gengar.png\",\n\t\t\ttypes: [\"Ghost\",\"Poison\"],\n\t\t\tdescription: \"On the night of a full moon, if shadows move on their own and laugh, it must be Gengar’s doing.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Scyther\",\n\t\t\tid: \"#123\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/scyther.png\",\n\t\t\ttypes: [\"Bug\", \"Flying\"],\n\t\t\tdescription: \"As Scyther fights more and more battles, its scythes become sharper and sharper. With a single slice, Scyther can fell a massive tree.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Omanyte\",\n\t\t\tid: \"#138\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/omanyte.png\",\n\t\t\ttypes: [\"Rock\", \"Water\"],\n\t\t\tdescription: \"Because some Omanyte manage to escape after being restored or are released into the wild by people, this species is becoming a problem.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Aerodactyl\",\n\t\t\tid: \"#142\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/aerodactyl.png\",\n\t\t\ttypes: [\"Flying\"],\n\t\t\tdescription: \"This is a ferocious Pokémon from ancient times. Apparently even modern technology is incapable of producing a perfectly restored specimen.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Articuno\",\n\t\t\tid: \"#144\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/articuno.png\",\n\t\t\ttypes: [\"Ice\",\"Flying\"],\n\t\t\tdescription: \"It’s said that this Pokémon’s beautiful blue wings are made of ice. Articuno flies over snowy mountains, its long tail fluttering along behind it.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Azumarill\",\n\t\t\tid: \"#184\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/azumarill.png\",\n\t\t\ttypes: [\"Water\",\"Fairy\"],\n\t\t\tdescription: \"It spends most of its time in the water. On sunny days, Azumarill floats on the surface of the water and sunbathes.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Umbreon\",\n\t\t\tid: \"#197\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/umbreon.png\",\n\t\t\ttypes: [\"Dark\"],\n\t\t\tdescription: \"When this Pokémon becomes angry, its pores secrete a poisonous sweat, which it sprays at its opponent’s eyes.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Murkrow\",\n\t\t\tid: \"#198\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/murkrow.png\",\n\t\t\ttypes: [\"Dark\", \"Flying\"],\n\t\t\tdescription: \"It has a weakness for shiny things. It’s been known to sneak into the nests of Gabite—noted collectors of jewels—in search of treasure.\"\n\t\t},\n\t\t{\n\t\t\tname: \"Forretress\",\n\t\t\tid: \"#205\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/forretress.png\",\n\t\t\ttypes: [\"Bug\", \"Steel\"],\n\t\t\tdescription: \"When something approaches it, it fires off fragments of its steel shell in attack. This is not a conscious action but a conditioned reflex.\"\n\t\t},\n\t],\n\ttypeSelection : [\"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \"Fighting\", \"Poison\", \"Ground\", \"Flying\", \"Bug\", \"Rock\", \"Ghost\", \"Dark\", \"Steel\", \"Fairy\"],\n\tprevPage: '/',\n} \n\nchangePrevPage = (page) => {\n\tthis.setState({\n\t\tprevPage: page\n\t});\n}\n\n\n  render() {\n\t\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\t\t\t\t\t\t<nav>\n\t\t\t\t\t\t\t<img className=\"pokeheader\" src={\"https://tcgplayerpro-www.s1.umbraco.io/media/2483/pokemon_play_pokemon_banner-02-2x.jpg\"} />\n\t\t\t\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t\t\t\t\t<span>All</span>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.state.typeSelection.map( type => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Link to={\"/type/\" + type.toLocaleLowerCase()}><span> {type} </span></Link>\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Normal\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Normal') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fire\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fire') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Water\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Water') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Electric\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Electric') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Grass\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Grass') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ice\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ice') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fighting\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fighting') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Poison\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Poison') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ground\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ground') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Flying\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Flying') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Bug\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Bug') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Rock\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Rock') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ghost\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ghost') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Dark\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Dark') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Steel\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Steel') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fairy\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fairy') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<div className=\"descriptionContainer\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.map( pokemon => <Route path={\"/\"+pokemon.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Description  prevPage={this.state.prevPage} pokemon={pokemon} full={true} />\n\t\t\t\t\t\t\t\t\t\t\t</Route>)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n  \t\t</header>\n      \n\n    </div>\n  );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}