{"ast":null,"code":"var _jsxFileName = \"/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/components/EditAnimeForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditAnimeForm = ({\n  editAnime,\n  editAnimeBtnClickHandler\n}) => {\n  _s();\n\n  const [title, setTitle] = useState(editAnime.title);\n  const [category, setCategory] = useState(editAnime.Category);\n  const [rating, setRating] = useState(editAnime.rating);\n  const [image, setImage] = useState(editAnime.image);\n  const [synopsis, setSynopsis] = useState(editAnime.synopsis);\n  const [episodes, setEpisodes] = useState(editAnime.episodes);\n  const [status, setStatus] = useState(editAnime.status);\n  const [spoilers, setSpoilers] = useState(editAnime.spoilers);\n\n  const save = () => {\n    //   console.log(editAnime.title)\n    axios.put('http://localhost:8000/anime/' + editAnime._id, {\n      title,\n      category,\n      rating,\n      image,\n      synopsis,\n      episodes,\n      status,\n      spoilers\n    }).then(res => {\n      editAnimeBtnClickHandler(editAnime);\n      alert(`${res.data.title} has been updated`);\n      console.log(res.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addAnimeForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: rating,\n      onChange: e => {\n        setRating(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Drama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Comedy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Horror/Gore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: image,\n      onChange: e => {\n        setImage(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Plot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"plot\",\n      type: \"text\",\n      value: synopsis,\n      onChange: e => {\n        setSynopsis(e.target.value);\n      },\n      width: 200,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Spoiler:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"plot\",\n      type: \"text\",\n      value: spoilers,\n      onChange: e => {\n        setSpoilers(e.target.value);\n      },\n      width: 200,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Number of Episodes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: episodes,\n      onChange: e => {\n        setEpisodes(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: status,\n      onChange: e => {\n        setStatus(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Coming Soon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"On-Going\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/anime/all\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: save,\n        children: \"Update Anime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditAnimeForm, \"CMCELdQalr6XnnyIS8cWQ3zQGLE=\");\n\n_c = EditAnimeForm;\nexport default EditAnimeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAnimeForm\");","map":{"version":3,"sources":["/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/components/EditAnimeForm.js"],"names":["useState","axios","Link","Button","EditAnimeForm","editAnime","editAnimeBtnClickHandler","title","setTitle","category","setCategory","Category","rating","setRating","image","setImage","synopsis","setSynopsis","episodes","setEpisodes","status","setStatus","spoilers","setSpoilers","save","put","_id","then","res","alert","data","console","log","e","target","value"],"mappings":"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","sourcesContent":["\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport {Button} from 'react-bootstrap';\n\n\n\nconst EditAnimeForm = ({editAnime, editAnimeBtnClickHandler}) => {\n\n    const [title, setTitle] = useState(editAnime.title);\n    const [category, setCategory] = useState(editAnime.Category);\n    const [rating, setRating] = useState(editAnime.rating);\n    const [image, setImage] = useState(editAnime.image)\n    const [synopsis, setSynopsis] = useState(editAnime.synopsis)\n    const [episodes, setEpisodes] = useState(editAnime.episodes)\n    const [status, setStatus] = useState(editAnime.status);\n    const [spoilers, setSpoilers] = useState(editAnime.spoilers)\n\n\n  const save = () => {\n    //   console.log(editAnime.title)\n      axios.put('http://localhost:8000/anime/' + editAnime._id, {\n        title,\n        category,\n        rating,\n        image,\n        synopsis,\n        episodes,\n        status,\n        spoilers\n      })\n    .then(res => {\n        editAnimeBtnClickHandler(editAnime)\n        alert(`${res.data.title} has been updated`);\n        console.log(res.data);\n    })\n  }\n   \n\n    return(\n\n        <div className=\"addAnimeForm\">\n            <span><small>Title:</small></span>\n            <input \n            type='text' \n            value={title}\n            onChange={(e)=> setTitle(e.target.value)}\n            /> <br />\n            <span><small>Rating</small></span>     \n            <input type='number'\n            value={rating}\n            onChange={(e)=>{setRating(e.target.value)}}\n            /> <br />\n           <span><small>Category</small></span>\n            <select\n            value={category}\n            onChange={(e)=> setCategory(e.target.value)}\n            >\n                <option>Action</option>\n                <option>Drama</option>\n                <option>Comedy</option>\n                <option>Horror/Gore</option>\n            </select> <br />\n            <span><small>Image</small></span>\n            <input \n            type='text'\n            value={image}\n            onChange={(e) => {setImage(e.target.value)}} \n            /> <br />\n            <span><small>Plot:</small></span>\n            <input \n            className=\"plot\"\n            type=\"text\"\n            value={synopsis}\n            onChange={(e) => {setSynopsis(e.target.value)}}\n            width={200}\n            height={200}\n            />\n            <span><small>Spoiler:</small></span>\n            <textarea\n            className=\"plot\"\n            type=\"text\"\n            value={spoilers}\n            onChange={(e) => {setSpoilers(e.target.value)}}\n            width={200}\n            height={200}\n            />\n            <br />\n            <span><small>Number of Episodes:</small></span>\n            <input \n            type=\"number\" \n            value={episodes} \n            onChange={(e)=> {setEpisodes(e.target.value)}}\n            />\n            <span><small>Status</small></span>\n            <select \n            value={status}\n            onChange={(e)=>{setStatus(e.target.value)}}\n            >\n                <option>Coming Soon</option>\n                <option>On-Going</option>\n                <option>Completed</option>\n            </select>\n\n            <Link to=\"/anime/all\">\n                <Button variant='primary' onClick={save}>Update Anime</Button>\n            </Link>\n           \n            \n        </div>\n    );\n}\n\nexport default EditAnimeForm;"]},"metadata":{},"sourceType":"module"}