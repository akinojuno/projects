{"ast":null,"code":"var _jsxFileName = \"/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport AnimeList from './components/AnimeList';\nimport { Route, Link } from 'react-router-dom';\nimport Description from './components/Description';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [animes, setAnimes] = useState([]);\n  useEffect(_id => {\n    axios('http://localhost:8000/anime').then(res => {\n      setAnimes(res.data);\n    });\n  }, []); // \ttypeSelection : [\"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \"Fighting\", \"Poison\", \"Ground\", \"Flying\", \"Bug\", \"Rock\", \"Ghost\", \"Dark\", \"Steel\", \"Fairy\"],\n  // \tprevPage: '/',\n  // } \n\n  changePrevPage = page => {\n    this.setState({\n      prevPage: page\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"pokeheader\",\n          src: \"https://tcgplayerpro-www.s1.umbraco.io/media/2483/pokemon_play_pokemon_banner-02-2x.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 10\n        }, this), this.state.typeSelection.map(type => {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/type/\" + type.toLocaleLowerCase(),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", type, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: animes.map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(AnimeList, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Normal\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Normal') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Fire\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Fire') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Water\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Water') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Electric\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Electric') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Grass\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Grass') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Ice\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Ice') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Fighting\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Fighting') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Poison\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Poison') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Ground\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Ground') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Flying\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Flying') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Bug\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Bug') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Rock\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Rock') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Ghost\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Ghost') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Dark\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Dark') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Steel\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Steel') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/type/Fairy\",\n            children: this.state.pokemons.filter(pokemon => {\n              return pokemon.types.indexOf('Fairy') !== -1;\n            }).map(pokemon => {\n              return /*#__PURE__*/_jsxDEV(Pokemon, {\n                name: pokemon.name,\n                image: pokemon.img,\n                type: pokemon.types\n              }, pokemon.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"descriptionContainer\",\n        children: this.state.pokemons.map(pokemon => /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\" + pokemon.name,\n          children: /*#__PURE__*/_jsxDEV(Description, {\n            prevPage: this.state.prevPage,\n            pokemon: pokemon,\n            full: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 48\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"9/Jd1XsWNDZ6DyYLV7cE5Cckuk8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/App.js"],"names":["React","AnimeList","Route","Link","Description","axios","useState","useEffect","App","animes","setAnimes","_id","then","res","data","changePrevPage","page","setState","prevPage","state","typeSelection","map","type","toLocaleLowerCase","pokemon","name","img","types","id","pokemons","filter","indexOf"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React from 'react'\nimport AnimeList from './components/AnimeList';\nimport { Route, Link } from 'react-router-dom';\nimport Description from './components/Description';\nimport axios from 'axios';\nimport {useState, useEffect} from 'react';\n\nconst App = () => {\n\n\tconst [animes, setAnimes] = useState([])\n\n\tuseEffect((_id) => {\n\t\taxios('http://localhost:8000/anime')\n\t\t.then(res => {\n\t\t  setAnimes(res.data)\n\t\t})\n\t  }, []);\n\n// \ttypeSelection : [\"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \"Fighting\", \"Poison\", \"Ground\", \"Flying\", \"Bug\", \"Rock\", \"Ghost\", \"Dark\", \"Steel\", \"Fairy\"],\n// \tprevPage: '/',\n// } \n\nchangePrevPage = (page) => {\n\tthis.setState({\n\t\tprevPage: page\n\t});\n}\n\n\n\t\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\t\t\t\t\t\t<nav>\n\t\t\t\t\t\t\t<img className=\"pokeheader\" src={\"https://tcgplayerpro-www.s1.umbraco.io/media/2483/pokemon_play_pokemon_banner-02-2x.jpg\"} />\n\t\t\t\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t\t\t\t\t<span>All</span>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.state.typeSelection.map( type => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Link to={\"/type/\" + type.toLocaleLowerCase()}><span> {type} </span></Link>\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tanimes.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <AnimeList\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Normal\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Normal') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fire\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fire') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Water\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Water') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Electric\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Electric') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Grass\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Grass') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ice\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ice') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fighting\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fighting') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Poison\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Poison') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ground\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ground') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Flying\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Flying') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Bug\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Bug') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Rock\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Rock') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ghost\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ghost') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Dark\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Dark') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Steel\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Steel') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fairy\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fairy') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<div className=\"descriptionContainer\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.map( pokemon => <Route path={\"/\"+pokemon.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Description  prevPage={this.state.prevPage} pokemon={pokemon} full={true} />\n\t\t\t\t\t\t\t\t\t\t\t</Route>)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n  \t\t</header>\n      \n\n    </div>\n  );\n  }\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}