{"ast":null,"code":"var _jsxFileName = \"/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport AnimeList from './components/AnimeList';\nimport { Route, Link } from 'react-router-dom';\nimport Description from './components/Description';\nimport AddAnimeForm from './components/AddAnimeForm';\nimport Review from './components/Review';\nimport AddReviewForm from './components/AddReviewForm';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [animes, setAnimes] = useState([]);\n  const [prevPage, setPrevPage] = useState('');\n  useEffect(_id => {\n    axios('http://localhost:8000/anime').then(res => {\n      setAnimes(res.data);\n    });\n  }, []); // \ttypeSelection : [\"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \"Fighting\", \"Poison\", \"Ground\", \"Flying\", \"Bug\", \"Rock\", \"Ghost\", \"Dark\", \"Steel\", \"Fairy\"],\n  // \tprevPage: '/',\n  // } \n\n  const deleteAnime = _id => {\n    let updatedAnime = animes.filter(anime => anime._id !== _id);\n    setAnimes(updatedAnime);\n  };\n\n  const addAnime = newAnime => {\n    setAnimes([...animes, newAnime]);\n  };\n\n  const changePrevPage = page => {\n    setPrevPage({\n      prevPage: page\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/addanime',\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Add New Anime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: '/addanime',\n          children: /*#__PURE__*/_jsxDEV(AddAnimeForm, {\n            addAnime: addAnime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: '/anime/addreview',\n          children: /*#__PURE__*/_jsxDEV(AddReviewForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"descriptionContainer\",\n        children: animes.map(anime => /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/review/\" + anime.title,\n          children: /*#__PURE__*/_jsxDEV(Review, {\n            prevPage: prevPage,\n            anime: anime,\n            full: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"descriptionContainer\",\n        children: animes.map(anime => /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\" + anime.title,\n          children: /*#__PURE__*/_jsxDEV(Description, {\n            prevPage: prevPage,\n            anime: anime,\n            full: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: animes.map(animes => {\n              return /*#__PURE__*/_jsxDEV(AnimeList, {\n                anime: animes,\n                deleteAnime: deleteAnime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RHnroLIH+vOojvzgcH1UAhDoFTs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/akinojuno/Desktop/aquino/homeworks/homeworks-batch4/animelist/frontend/src/App.js"],"names":["React","AnimeList","Route","Link","Description","AddAnimeForm","Review","AddReviewForm","axios","useState","useEffect","App","animes","setAnimes","prevPage","setPrevPage","_id","then","res","data","deleteAnime","updatedAnime","filter","anime","addAnime","newAnime","changePrevPage","page","map","title"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React from 'react'\nimport AnimeList from './components/AnimeList';\nimport { Route, Link } from 'react-router-dom';\nimport Description from './components/Description';\nimport AddAnimeForm from './components/AddAnimeForm';\nimport Review from './components/Review';\nimport AddReviewForm from './components/AddReviewForm';\nimport axios from 'axios';\nimport {useState, useEffect} from 'react';\n\nconst App = () => {\n\n\tconst [animes, setAnimes] = useState([])\n\tconst [prevPage, setPrevPage] = useState('');\n\n\tuseEffect((_id) => {\n\t\taxios('http://localhost:8000/anime')\n\t\t.then(res => {\n\t\t  setAnimes(res.data)\n\t\t})\n\t  }, []);\n\n// \ttypeSelection : [\"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \"Fighting\", \"Poison\", \"Ground\", \"Flying\", \"Bug\", \"Rock\", \"Ghost\", \"Dark\", \"Steel\", \"Fairy\"],\n// \tprevPage: '/',\n// } \n\nconst deleteAnime = (_id) => {\n\tlet updatedAnime = animes.filter(anime => anime._id !== _id);\n\tsetAnimes(updatedAnime);\n};\n\nconst addAnime = (newAnime) => {\n\tsetAnimes([\n\t\t...animes,\n\t\tnewAnime\n\t])\n}\n\nconst changePrevPage = (page) => {\n\tsetPrevPage({\n\t\tprevPage: page\n\t});\n};\n\n\n\t\n    return (\n    <div className=\"App\">\n\t\t<Link to={'/addanime'}>\n\t\t\t<small>\n\t\t\t\tAdd New Anime\n\t\t\t</small>\n\t\t</Link>\n      <header className=\"App-header\">\n\t\t\t\t\t\t{/* <nav>\n\t\t\t\t\t\t\t<img className=\"pokeheader\" src={\"https://tcgplayerpro-www.s1.umbraco.io/media/2483/pokemon_play_pokemon_banner-02-2x.jpg\"} />\n\t\t\t\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t\t\t\t\t<span>All</span>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.state.typeSelection.map( type => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Link to={\"/type/\" + type.toLocaleLowerCase()}><span> {type} </span></Link>\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</nav> */}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Route exact path={'/addanime'}>\n\t\t\t\t\t\t\t\t\t\t\t<AddAnimeForm addAnime={addAnime} />\n\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t<Route exact path={'/anime/addreview'}>\n\t\t\t\t\t\t\t\t\t\t\t<AddReviewForm />\n\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"descriptionContainer\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tanimes.map( anime => <Route exact path={\"/review/\"+anime.title}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Review  prevPage={prevPage} anime={anime} full={true} />\n\t\t\t\t\t\t\t\t\t\t\t</Route>)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"descriptionContainer\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tanimes.map( anime => <Route path={\"/\"+anime.title}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Description  prevPage={prevPage} anime={anime} full={true} />\n\t\t\t\t\t\t\t\t\t\t\t</Route>)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tanimes.map(animes => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <AnimeList \n\t\t\t\t\t\t\t\t\t\t\t\t\tanime={animes}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteAnime={deleteAnime}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t{/* < Route exact path=\"/type/Normal\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Normal') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fire\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fire') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Water\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Water') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Electric\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Electric') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Grass\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Grass') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ice\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ice') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fighting\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fighting') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Poison\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Poison') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ground\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ground') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Flying\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Flying') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Bug\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Bug') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Rock\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Rock') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Ghost\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Ghost') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Dark\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Dark') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Steel\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Steel') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t\t< Route exact path=\"/type/Fairy\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.pokemons.filter( (pokemon) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn pokemon.types.indexOf('Fairy') !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t})  \n\t\t\t\t\t\t\t\t\t\t\t\t.map( pokemon => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <Pokemon\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={pokemon.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\timage={pokemon.img} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={pokemon.types}/>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Route> */}\n\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n  \t\t</header>\n      \n\n    </div>\n  );\n  }\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}